version: v1
kind: SkillSet
metadata:
  name: customer-data-processor
  variant: example-variant
  path: /skillsets/customer-data-processor
spec:
  version: "1.0.0"
  runner:
    id: "system.commandrunner"
    config:
      command: "python3 skillsets/customer-data-processor.py"
      env:
        - key: "some-key"
          value: "some-value"
	  security:
	    - type: default #could be one of: default, TEZ
  context:
    - name: customer-cache
      provider:
        id: "system.redis"
        config:
          host: "redis.internal"
          port: 6379
          db: 0
          max_connections: 10
          timeout: 5000
      schema:
        type: object
        properties:
          customer_id:
            type: string
          last_accessed:
            type: string
            format: date-time
          data:
            type: object
            properties:
              name:
                type: string
              email:
                type: string
                format: email
              preferences:
                type: object
                properties:
                  theme:
                    type: string
                    enum: [light, dark]
                  notifications:
                    type: boolean
        required:
          - customer_id
          - data
      value: null  # Optional default value, can be empty
      annotations:
        mcp:description: "Customer data cache using Redis"
        mcp:tool: "redis"
        mcp:resource: "cache"
  skills:
    - name: process-customer
      description: "Process and validate customer data"
      inputSchema:
        type: object
        properties:
          customer_id:
            type: string
          data:
            type: object
            properties:
              name:
                type: string
              email:
                type: string
                format: email
              preferences:
                type: object
      outputSchema:
        type: object
        properties:
          status:
            type: string
            enum: [success, error]
          processed_at:
            type: string
            format: date-time
          validation_errors:
            type: array
            items:
              type: string
      exportedActions:
        - customer.process
        - customer.validate
      annotations:
        mcp:description: "Process and validate customer data with schema validation"
        mcp:tool: "data-processor"
  dependencies:
    - path: "/resources/aws/s3/customer-data"
      kind: Resource
      alias: "customer-data"
      actions:
        - s3.read
        - s3.write
    - path: "/skillsets/data-validation"
      kind: SkillSet
      alias: "data-validation"
      actions:
        - validation.validate
        - validation.report
  annotations:
    mcp:description: "Customer data processing skillset with validation and storage capabilities"
    mcp:tool: "data-processor"